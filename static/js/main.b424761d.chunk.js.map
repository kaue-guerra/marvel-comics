{"version":3,"sources":["img/marvel-logo.png","components/Header/index.js","components/Search/index.js","components/Modal/index.js","services/api.js","store/ducks/cart/index.js","store/ducks/layout/index.js","pages/comics/styles.js","pages/comics/index.js","components/ItemCart/index.js","pages/cart/index.js","routes.js","components/Message/index.js","components/Messages/index.js","App.js","store/index.js","index.js"],"names":["Header","length","useSelector","state","cart","to","src","Logo","alt","className","class","Search","value","onChange","type","event","target","placeholder","portalRoot","document","getElementById","Modal","children","isOpen","onClickClose","ReactDOM","createPortal","onClick","publicKey","time","Number","Date","hash","md5","api","axios","create","baseURL","params","ts","apikey","addItem","createAction","removeItem","createReducer","action","payload","filter","comic","id","addMessage","removeMessage","messages","msg","Container","styled","main","CardList","div","Card","ButtonMore","Comics","useState","comics","setComics","text","setText","comicData","setComicData","comicId","setComicId","dispatch","useDispatch","useEffect","get","then","response","data","results","catch","e","console","log","handleMore","useCallback","a","offset","search","map","thumbnail","path","extension","title","pageCount","format","getComic","addItemCart","description","size","ItemCart","item","removeItemCart","CartPage","Fragment","Routes","component","exact","Message","message","setTimeout","role","Messages","layout","index","App","configureStore","reducer","cartReducer","layoutReducer","render","StrictMode","store"],"mappings":"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","file":"static/js/main.b424761d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/marvel-logo.568d8c62.png\";","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport Logo from '../../img/marvel-logo.png';\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const length = useSelector(state => state.cart.length);\r\n\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <Link to=\"/\">\r\n                    <img src={Logo} alt=\"Marvel\" className=\"logo\" />\r\n                </Link>\r\n                <Link to=\"/\" className=\"ml-5 align-middle text-white\" >Home</Link>\r\n                <Link className=\"float-right mt-4 text-white align-middle\" to=\"/cart\"> <i class=\"fas fa-shopping-cart\">({length})</i></Link>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './index.css'\r\n\r\nconst Search = ({ value, onChange }) => {\r\n\r\n    function handleChange(event) {\r\n        onChange(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <input className=\"search-comic\" type=\"search\" value={value} onChange={handleChange} placeholder=\"Buscar\" />\r\n    )\r\n\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\n\r\nconst portalRoot = document.getElementById('portal-root');\r\n\r\nconst Modal = ({ children, isOpen, onClickClose }) => {\r\n\r\n    if (!isOpen) {\r\n        return null;\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className=\"modal__overlay\">\r\n            <div className=\"modal-comic\">\r\n                <button type=\"button\" className=\"modal__close-button\" onClick={onClickClose}>X</button>\r\n                {children}\r\n            </div>\r\n\r\n        </div>,\r\n        portalRoot,\r\n    );\r\n}\r\n\r\nexport default Modal;","import axios from 'axios';\r\nimport md5 from 'md5';\r\n\r\nconst publicKey = 'dfcea5624021194f64456856867a20cb';\r\nconst privateKey = 'c3f270dda8dd619391eea0e2b50318905790d284'\r\n\r\nconst time = Number(new Date());\r\n\r\nconst hash = md5(time + privateKey + publicKey);\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://gateway.marvel.com/v1/public/',\r\n    params: {\r\n        ts: time,\r\n        apikey: publicKey,\r\n        hash,\r\n    },\r\n})\r\n\r\nexport default api;","import { createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nconst INITIAL_STATE = [];\r\n\r\nexport const addItem = createAction('ADD_ITEM');\r\nexport const removeItem = createAction('REMOVE_ITEM');\r\n\r\nexport default createReducer(INITIAL_STATE, {\r\n    [addItem.type]: (state, action) => [...state, action.payload],\r\n    [removeItem.type]: (state, action) => state.filter((comic) => comic.id !== action.payload)\r\n});\r\n\r\n","import { createAction, createReducer } from '@reduxjs/toolkit';\r\nconst INITIAL_STATE = {\r\n    messages: []\r\n};\r\n\r\nexport const addMessage = createAction('ADD_MESSAGE');\r\nexport const removeMessage = createAction('REMOVE_MESSAGE');\r\n\r\nexport default createReducer(INITIAL_STATE, {\r\n    [addMessage.type]: (state, action) => ({ ...state, messages: [...state.messages, action.payload] }),\r\n    [removeMessage.type]: (state, action) => ({\r\n        ...state,\r\n        messages: state.messages.filter((msg) => msg !== action.payload)\r\n    })\r\n});","import styled from 'styled-components';\r\n\r\nexport const Container = styled.main`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width:100%;\r\n    height:100%;\r\n\r\n`;\r\n\r\nexport const CardList = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\nexport const Card = styled.div`\r\n\r\n    background-color:#f1f1f1;\r\n    height: 550px;\r\n    width:300px;\r\n    margin:10px;\r\n    border-radius: 5px;\r\n    overflow:hidden;\r\n    box-shadow: 2px 2px 10px 1px rgba(0, 0, 0, 0.3);\r\n\r\n    h2, p {\r\n        padding:5px;\r\n        text-align: justify;\r\n    }\r\n\r\n    .imgComic{\r\n        height:400px;\r\n        width:100%;\r\n        background: no-repeat center;\r\n        background-size: cover;\r\n    }\r\n\r\n    .title-comic{\r\n        padding:5px;\r\n        text-align: justify;\r\n        max-width: 270px;\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n    }\r\n\r\n`;\r\n\r\nexport const ButtonDetails = styled.div`\r\n    background: #fff;\r\n    height : 30px;\r\n    width: 100px;\r\n    float:right;\r\n    padding: 4px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    transition: all 0.3s;\r\n\r\n    cursor:pointer;\r\n    box-shadow: 2px 2px 10px 1px rgba(0, 0, 0, 0.3);\r\n    margin-right: 10px;\r\n\r\n    &:hover{\r\n        background:#ec1d24;\r\n    }\r\n`;\r\n\r\nexport const ButtonSelect = styled.div`\r\n    background: #fff;\r\n    height : 30px;\r\n    width: 100px;\r\n    float:left;\r\n    padding: 4px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    transition: all 0.3s;\r\n\r\n    cursor:pointer;\r\n    box-shadow: 2px 2px 10px 1px rgba(0, 0, 0, 0.3);\r\n    margin-left: 10px;\r\n\r\n    &:hover{\r\n        background:#ec1d24;\r\n    }\r\n`;\r\n\r\nexport const ButtonMore = styled.div`\r\n    background: #fff;\r\n    height : 40px;\r\n    margin: 20px auto;\r\n    padding: 0 50px;\r\n    border-radius: 5px;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    transition: all 0.3s;\r\n\r\n    cursor:pointer;\r\n    box-shadow: 2px 2px 10px 1px rgba(0, 0, 0, 0.3);\r\n\r\n    &:hover{\r\n        background:#ec1d24;\r\n    }\r\n\r\n    svg{\r\n        margin: 0 8px;\r\n    }\r\n`;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FiChevronDown } from 'react-icons/fi'\r\n\r\nimport Header from '../../components/Header'\r\nimport Search from '../../components/Search'\r\nimport Modal from '../../components/Modal'\r\nimport api from '../../services/api'\r\nimport { addItem } from '../../store/ducks/cart'\r\nimport { addMessage } from \"../../store/ducks/layout\"\r\n\r\nimport { Container, CardList, Card, ButtonMore } from './styles'\r\n\r\nconst Comics = () => {\r\n\r\n    const [comics, setComics] = useState([]);\r\n    const [text, setText] = useState('')\r\n    const [comicData, setComicData] = useState();\r\n    const [comicId, setComicId] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (text) {\r\n            api.get(`/comics?titleStartsWith=${text}`)\r\n                .then(response => setComics(response.data.data.results))\r\n                .catch(e => console.log(e))\r\n        } else {\r\n            api.get('/comics')\r\n                .then(response => setComics(response.data.data.results))\r\n                .catch(e => console.log(e))\r\n        }\r\n    }, [text]);\r\n\r\n\r\n    const handleMore = useCallback(\r\n        async () => {\r\n            if (text) {\r\n                try {\r\n                    const offset = comics.length;\r\n                    const response = await api.get(`/comics?titleStartsWith=${text}`, {\r\n                        params: {\r\n                            offset,\r\n                        },\r\n                    });\r\n\r\n                    setComics([...comics, ...response.data.data.results]);\r\n\r\n\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            } else {\r\n                try {\r\n                    const offset = comics.length;\r\n                    const response = await api.get('comics', {\r\n                        params: {\r\n                            offset,\r\n                        },\r\n                    });\r\n\r\n                    setComics([...comics, ...response.data.data.results]);\r\n\r\n\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            }\r\n        }, [comics, text])\r\n\r\n    async function getComic(id) {\r\n        const comicData = await api.get(`/comics/${id}`)\r\n            .then(response => setComicData(response.data.data.results))\r\n            .catch(e => console.log(e));\r\n        setComicId(id)\r\n\r\n    }\r\n\r\n    function addItemCart(comic) {\r\n        dispatch(addItem(comic));\r\n\r\n        dispatch(addMessage(`${comic.title} adicionado com sucesso!`));\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Header />\r\n            <Search value={text} onChange={(search) => setText(search)} />\r\n            <CardList>\r\n                {comics.map(comic => {\r\n                    return (\r\n                        <Card key={comic.id} comic={comic}>\r\n                            <img className=\"imgComic\" src={`${comic.thumbnail.path}.${comic.thumbnail.extension}`} alt={`Capa de ${comic.title}`} />\r\n                            <h2 className=\"title-comic p-0 mb-1 ml-2\">{comic.title}</h2>\r\n                            <p className=\"p-0 mb-1 ml-2\">Number Pages: {comic.pageCount}</p>\r\n                            <p className=\"p-0 mb-2 ml-2\" >Format: {comic.format}</p>\r\n                            <button type=\"button\" className=\"btn btn-danger float-right mr-2\" onClick={() => getComic(comic.id)}>\r\n                                Detalhes</button>\r\n                            <button className=\"btn btn-danger float-left ml-2\" onClick={() => addItemCart(comic)}>Selecionar</button>\r\n                        </Card>\r\n                    )\r\n                })}\r\n                {comicId && (\r\n                    <Modal isOpen onClickClose={() => setComicId(null)}>\r\n                        {comicData.map(data => {\r\n                            return (\r\n                                <div>\r\n                                    <h2 className=\"modal-title\">{data.title}</h2>\r\n                                    <img className=\"imgComic-modal\" src={`${data.thumbnail.path}.${data.thumbnail.extension}`} alt={`Capa de ${data.title}`} />\r\n                                    <p className=\"p-0 mb-1\">Number Pages: {data.pageCount}</p>\r\n                                    <p className=\"p-0 mb-1\">Format: {data.format}</p>\r\n                                    <p className=\"p-0 mb-2\">Description: {data.description}</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </Modal>\r\n                )}\r\n            </CardList>\r\n            <ButtonMore onClick={handleMore}>\r\n                <FiChevronDown size={20} />\r\n                Mais\r\n                <FiChevronDown size={20} />\r\n            </ButtonMore>\r\n        </Container>)\r\n}\r\n\r\nexport default Comics;","import React from 'react';\r\n\r\nconst ItemCart = ({ item, removeItemCart }) => {\r\n    return (\r\n        <div className=\"col-sm-2 mt-3\">\r\n            <div className=\"card bg-light mb-3\">\r\n                <img className=\"card-img-top img-thumbnail img-card-cart\" src={`${item.thumbnail.path}.${item.thumbnail.extension}`} alt={item.title}></img>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title title-comic\">{item.title}</h5>\r\n                    <button onClick={() => removeItemCart(item.id)} className=\"btn btn-danger\">\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCart;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport ItemCart from \"../../components/ItemCart\"\r\nimport \"./index.css\"\r\n\r\nimport { removeItem } from '../../store/ducks/cart'\r\nimport { addMessage } from '../../store/ducks/layout'\r\n\r\nimport Header from '../../components/Header'\r\n\r\nconst CartPage = () => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch();\r\n\r\n    function removeItemCart(id) {\r\n        dispatch(removeItem(id));\r\n\r\n        dispatch(addMessage('Item removido com sucesso!'))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {cart.length === 0 ? (<h2 className=\"col-sm-12 mt-5 text-center font-weight-bold\">Sem revistas no carrinho</h2>)\r\n                        : (\r\n                            <React.Fragment>\r\n                                <h2 className=\"col-sm-12 mt-5 text-dark text-center font-weight-bold\">HQs Selecionadas</h2>\r\n                                {cart.map((item) => <ItemCart key={item.id} item={item} removeItemCart={removeItemCart} />)}\r\n                            </React.Fragment>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default CartPage;","import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\"\r\n\r\nimport Comics from './pages/comics';\r\nimport CartPage from './pages/cart'\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" component={Comics} exact />\r\n            <Route path=\"/cart\" component={CartPage} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeMessage } from '../../store/ducks/layout';\r\n\r\nexport default function Message({ message }) {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(\r\n        () => {\r\n            setTimeout(() => {\r\n                dispatch(removeMessage(message));\r\n            }, 2500);\r\n        },\r\n        [dispatch, message]\r\n    );\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"alert alert-success font-weight-bold\" role=\"alert\">\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport Message from '../Message';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './index.css';\r\n\r\nexport default function Messages() {\r\n    const { messages } = useSelector((state) => state.layout);\r\n\r\n    return <div className=\"messages\">{messages.map((msg, index) => <Message key={index} message={msg} />)}</div>;\r\n}","import React, { Fragment } from 'react';\r\n\r\nimport Routes, { } from \"./routes\";\r\nimport Messages from './components/Messages';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <Messages />\r\n      <Routes />\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport cartReducer from './ducks/cart';\r\nimport layoutReducer from './ducks/layout';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        cart: cartReducer,\r\n        layout: layoutReducer\r\n    }\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from \"react-router-dom\"\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}